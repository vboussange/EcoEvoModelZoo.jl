var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = EcoEvoModelZoo","category":"page"},{"location":"#EcoEvoModelZoo","page":"Home","title":"EcoEvoModelZoo","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for EcoEvoModelZoo.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [EcoEvoModelZoo]","category":"page"},{"location":"#EcoEvoModelZoo.AkessonModel","page":"Home","title":"EcoEvoModelZoo.AkessonModel","text":"This model is inspired from Akesson et al. 2021. General version of the model, corresponding to original R script.\n\nSpecialized variants are provided in other AbstractModels.\n\n\n\n\n\n","category":"type"},{"location":"#EcoEvoModelZoo.EcosystemModelMcCann","page":"Home","title":"EcoEvoModelZoo.EcosystemModelMcCann","text":"EcosystemModelMcKann\n\nThis model is inspired from McCann 1994.  Similar to EcosystemModelOmnivory, but without monivory.\n\n\n\n\n\n","category":"type"},{"location":"#EcoEvoModelZoo.EcosystemModelOmnivory","page":"Home","title":"EcoEvoModelZoo.EcosystemModelOmnivory","text":"EcosystemModelOmnivory\n\nThis model is inspired from McCann 1997.\n\n\n\n\n\n","category":"type"},{"location":"#EcoEvoModelZoo.ResourceCompetition","page":"Home","title":"EcoEvoModelZoo.ResourceCompetition","text":"This model is inspired from Huisman et al. 1999 Nature.\n\n\n\n\n\n","category":"type"},{"location":"#EcoEvoModelZoo.ResourceCompetitionSmoothMin","page":"Home","title":"EcoEvoModelZoo.ResourceCompetitionSmoothMin","text":"This model is inspired from Huisman et al. 1999 Nature.,  but where Leibig's law is replaced by  imperfect substituable resources (smooth minimum). The smooth min function is parametrized by  s, which is a trainable parameter.\n\n\n\n\n\n","category":"type"},{"location":"#EcoEvoModelZoo.Temp-NTuple{7, Any}","page":"Home","title":"EcoEvoModelZoo.Temp","text":"Temperature as a function of space (x), time (t), and some climate parameters\n\n\n\n\n\n","category":"method"},{"location":"#EcoEvoModelZoo.eqs!-NTuple{4, Any}","page":"Home","title":"EcoEvoModelZoo.eqs!","text":"eqs(u, pars, t)\n\nRight-hand side of dynamical equations  Input:\n\ntime: Time at which function is evaluated (explicit time-dependence)\nu: Vector of u variables, with 2SL entries, where S is the number\n\nof species and L the number of patches. The first SL entries are the  densities, the second SL entries are the trait means.\n\npars: Model parameters, given as members of a list\n\nOutput:\n\nThe derivatives of the densities and trait means, as a vector in a list */\n\n\n\n\n\n","category":"method"},{"location":"#EcoEvoModelZoo.funcresp!-Tuple{Any, Vector{<:Real}, Vector{<:Real}, Vector{<:Real}, Matrix{<:Real}}","page":"Home","title":"EcoEvoModelZoo.funcresp!","text":"funcresp(n::Vector{<:Real}, Th::Vector{<:Real}, arate::Vector{<:Real}, W::Matrix{<:Real}) Type II functional response Input:\n\nn: Vector of population densities of all species in a given patch\nTh: Vector of handling times (with dummy values for resource species)\narate: Vector of attack rates (with dummy values for resource species)\nW: Adjacency matrix of trophic network; W(i,j)=1 if i eats j and 0 otherwise\n\nOutput:\n\nA matrix F(i,j), the feeding rate of consumer i on resource j\n\n\n\n\n\n","category":"method"},{"location":"#EcoEvoModelZoo.generate_network-Tuple{Int64, Int64}","page":"Home","title":"EcoEvoModelZoo.generate_network","text":"generate_network(SR::Int, SC::Int)\n\nreturn matrix W[i,j], which is nonzero if consumer i eats resource j SR is the number of resource, SC the number of consumer species.\n\nThe bipartite network is generated as follows.  First, both resources and consumers are labeled consecutively,  based on their initial temperature adaptations:  resource 1 / consumer 1 are the most cold-adapted,  and resource S / consumer S the most warm-adapted.  Next, we always put a feeding link between consumer i and resource i.  Finally, each consumer is randomly linked to four other resource species.  This yields a feeding network where every consumer is  connected to five resources altogether.\n\nNote: it seems that the definition of W_ij is that it determines which resource i is eat by consumer j\n\n\n\n\n\n","category":"method"},{"location":"#EcoEvoModelZoo.init_akesson_model-Tuple{}","page":"Home","title":"EcoEvoModelZoo.init_akesson_model","text":"init_akesson_model(\n;\n    tE,\n    S,\n    L,\n    vbar,\n    dbar,\n    model_type,\n    kappa,\n    eta,\n    nmin,\n    aw,\n    bw,\n    Tmax,\n    Tmin,\n    Cmax,\n    Cmin\n)\n\n\nReturns a Dictionary with all params for Akesson model.\n\nArguments\n\nmodel_type: can take values \"normal\", \"Tdep\", \"Tdep_trophic\" and \"trophic\".\n\n\n\n\n\n","category":"method"},{"location":"#EcoEvoModelZoo.smoothstep-Tuple{Any}","page":"Home","title":"EcoEvoModelZoo.smoothstep","text":"Apply twice continuously differentiable smoothed step function to a number x Input: x: Distance from pole, measured in units of the pole-to-equator distance Output: 0 if x < 0; 10x^3-15x^4+6*x^5 if 0 <= x <= 1; otherwise 1\n\n\n\n\n\n","category":"method"}]
}
